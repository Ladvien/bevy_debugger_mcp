[package]
name = "bevy_debugger_mcp"
version = "0.1.6"
edition = "2021"
authors = ["ladvien <ladvien@example.com>"]
description = "AI-assisted debugging for Bevy games through Claude Code using Model Context Protocol"
homepage = "https://github.com/ladvien/bevy_debugger_mcp"
repository = "https://github.com/ladvien/bevy_debugger_mcp"
readme = "README.md"
license = "GPL-3.0"
keywords = ["bevy", "debugging", "mcp", "claude", "gamedev"]
categories = ["game-development", "development-tools", "command-line-utilities"]
rust-version = "1.70"
build = "build.rs"
include = [
    "src/**/*",
    "tests/**/*",
    "benches/**/*",
    "Cargo.toml",
    "Cargo.lock",
    "LICENSE",
    "README.md",
    "build.rs",
    "scripts/bevy-debugger-control"
]
exclude = [
    "target/*",
    ".git/*",
    "launchd/*",
    "scripts/homebrew-formula.rb",
    "docs/CLAUDE_SUBAGENT_GUIDE.md"
]

[[bin]]
name = "bevy-debugger-mcp"
path = "src/main.rs"

# Test configuration for screenshot integration
[[test]]
name = "screenshot_integration_wrapper"
path = "tests/screenshot_integration_wrapper.rs"

[dependencies]
# MCP SDK for proper protocol implementation
rmcp = { version = "0.2.0", features = ["server"] }
rmcp-macros = "0.2.0"

tokio = { version = "1", features = ["full"] }
tokio-tungstenite = "0.24"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
futures-util = "0.3"
url = "2.0"
chrono = { version = "0.4", features = ["serde"] }
regex = "1.0"
dashmap = "6.0"
strsim = "0.11"
rand = "0.9.2"
rand_distr = "0.5.1"
async-trait = "0.1.89"
flate2 = "1.1.2"
sha2 = "0.10.9"
bincode = "1"
lazy_static = "1.5.0"
tokio-stream = "0.1"
uuid = { version = "1.0", features = ["v4", "serde"] }
tokio-metrics = "0.3"
sysinfo = "0.30"
hostname = "0.3"
rustc_version_runtime = "0.3"
is-terminal = "0.4"
notify = "6.0"
md5 = "0.7"

# Performance optimization dependencies
ahash = { version = "0.8", optional = true }

# Optional Bevy dependency for visual overlays
bevy = { version = "0.16", features = ["default", "bevy_remote"], optional = true }

[features]
# Default features - minimal overhead
default = ["basic-debugging"]

# Core debugging features
basic-debugging = []
full-debugging = [
    "basic-debugging",
    "entity-inspection", 
    "performance-profiling",
    "visual-debugging",
    "session-management",
    "issue-detection"
]

# Individual feature flags for granular control
entity-inspection = []
performance-profiling = []
visual-debugging = ["bevy"]
session-management = []
issue-detection = []
memory-profiling = []
stress-testing = []
time-travel = []
orchestration = []

# Performance optimizations
optimizations = ["caching", "pooling", "lazy-init", "ahash"]
caching = []
pooling = []
lazy-init = []
fast-hash = ["ahash"]

# Development and testing features
dev-tools = ["benchmarking", "detailed-logging"]
benchmarking = []
detailed-logging = []

# Legacy compatibility
visual_overlays = ["visual-debugging"]

[profile.release]
# Optimize for performance in release builds
opt-level = 3
lto = true          # Link-time optimization
codegen-units = 1   # Better optimization, slower compile
panic = "abort"     # Smaller binaries, no unwinding
strip = true        # Remove debug symbols

[profile.dev]
# Faster compilation for development
opt-level = 0
debug = true
incremental = true

[profile.release-with-debug]
# Release performance with debug info
inherits = "release"
debug = true
strip = false

[profile.bench]
# Optimization for benchmarks
inherits = "release"
debug = true
lto = "thin"        # Faster LTO for benchmarks

[dev-dependencies]
tokio-test = "0.4"
bevy = { version = "0.16", features = ["default", "bevy_remote"] }
nix = { version = "0.27", features = ["signal", "process"] }
tempfile = "3.0"
sha2 = "0.10"
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
rand = "0.9"
chrono = { version = "0.4", features = ["serde"] }

[[bench]]
name = "performance_benchmarks"
harness = false

